import {Command} from "./command.class";
import {Markup, Telegraf} from "telegraf";
import {IBotContext} from "../context/context.interface";

export class StartCommand extends Command {
    constructor(bot: Telegraf<IBotContext>) {
        super(bot);
    }

    handle() {
        this.bot.start((ctx) => {
            console.log(ctx.session);
            // ctx.reply('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –¢–µ–±—è, –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü, —á—É–≤—Å—Ç–≤—É—é –¢–≤–æ—é –Ω–∞—Ç—É—Ä—É, –ú–æ—à–µ–µ–µ–µ–µ–Ω–∏–∫!');
            ctx.reply('–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –∫—É—Ä—Å?', Markup.inlineKeyboard([
                    Markup.button.callback('üëç', 'course_like'),
                    Markup.button.callback('üëé', 'course_dislike')
                ])
            );
        });

        this.bot.action('course_like', (ctx) => {
            ctx.session.courseLike = true;

            ctx.editMessageText('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!');
        });

        this.bot.action('course_dislike', (ctx) => {
            ctx.session.courseLike = false;

            ctx.editMessageText('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ü—Ä–æ—Å—Ç–∏ –º–µ–Ω—è –±—Ä–∞—Ç, –∫–≤–∞–¥—Ä–∞—Ç üòî');
        });
    }
}